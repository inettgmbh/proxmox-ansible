---
- name: set up VMs
  delegate_to: "{{ pve_target_node }}"
  vars:
    t_run: "{{ 'running' if (reconfig_only | default(False)) else 'stopped' }}"
    t_state: "{{ pve_vm_state | replace('running', t_run ) }}"
  inett.pve.vm:
    vmid: "{{ pve_vmid }}"
    state: "{{ t_state }}"
    memory: "{{ pve_vm_memory }}"
    name: "{{ inventory_hostname }}"
    replace: "{{ pve_vm_replace }}"
    #clone
    source_vmid: "{{ pve_vm_source_vmid }}"
    #create
    agent: "{{ pve_vm_qemu_guest_agent }}"
    bios: "{{ pve_vm_bios }}"
    cpu: "{{ pve_vm_cpu }}"
    net: "{{ pve_vm_net }}"
    setup_iso: "{{ pve_vm_setup_iso }}"
    scsi: "{{ pve_vm_scsi }}"
    efivars_storage: "{{ pve_vm_efivars_storage | default(pve_vm_storage) | default('rbd') }}"
    storage: "{{ pve_vm_storage | default('rbd')  }}"
  register: __pve_vm_setup_result
  retries: 3
  delay: 10
  until: __pve_vm_setup_result is not failed
  tags: ["never", "vm_create"]

- block:
  - name: Resource pool
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm_resource_pool:
      vmid: "{{ pve_vmid }}"
      pool: "{{ pve_vm_resource_pool }}"
    when: pve_vm_resource_pool is defined
    tags: ["never", "vm_create"]

  - name: Description
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm_description:
      vmid: "{{ pve_vmid }}"
      description: "{{ pve_vm_notes }}"
    when: pve_vm_notes is defined
    tags: ["always"]

  - name: Network
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm_network:
      vmid: "{{ pve_vmid }}"
      net: "{{ pve_vm_net }}"
    when:
      - pve_vm_source_vmid | int >= 100
    tags: ["always"]

  - name: Configure nameserver
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm_config:
      vmid: "{{ pve_vmid }}"
      update:
        nameserver: "{{ pve_vm_nameserver }}"
    when:
      - pve_vm_nameserver is defined
      - pve_vm_searchdomain is not defined

  - name: Disks
    import_role:
      name: inett.pve.vm_disks

  - name: Configure nameserver and search domain
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm_config:
      vmid: "{{ pve_vmid }}"
      update:
        nameserver: "{{ pve_vm_nameserver }}"
        searchdomain: "{{ pve_vm_searchdomain }}"
    when:
      - pve_vm_nameserver is defined
      - pve_vm_searchdomain is defined

  - name: Update CPU
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm_config:
      vmid: "{{ pve_vmid }}"
      update:
        cores: "{{ pve_vm_cores }}"
    when: pve_vm_cores is defined
    tags: ["always"]

  - name: Update Memory
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm_config:
      vmid: "{{ pve_vmid }}"
      update:
        memory: "{{ pve_vm_memory }}"
        balloon: "{{ pve_vm_memory }}"
    when: pve_vm_memory is defined
    tags: ["always"]

  - name: Cloud-Init
    ansible.builtin.import_role:
      name: inett.vm_cloudinit
    tags: cidata

  - name: HA-Config
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm_ha:
      vmid: "{{ pve_vmid }}"
      state: "{{ 'started' if pve_vm_state == 'running' else 'stopped' }}"
      group: "ALL"
    tags: ["never", "vm_create", "ha"]

  - name: start VMs
    delegate_to: "{{ pve_target_node }}"
    inett.pve.vm:
      vmid: "{{ pve_vmid }}"
      state: "{{ pve_vm_state }}"
    when:
      - pve_vm_state == 'running'
      - pve_vm_ha is not defined
    tags: ["always", "start"]

  when: pve_vm_state != 'absent'

- name: group vms by state
  changed_when: False
  ansible.builtin.group_by:
    key: "pve_vms_state_{{pve_vm_state}}"

