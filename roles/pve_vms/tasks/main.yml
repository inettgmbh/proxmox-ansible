---
- name: set up VMs
  delegate_to: "{{ pve_target_node }}"
  inett.pve.pve_vm:
    vmid: "{{ pve_vmid }}"
    state: "{{ pve_vm_state | replace('running', 'stopped') }}"
    memory: "{{ pve_vm_memory }}"
    name: "{{ inventory_hostname }}"
    replace: "{{ pve_vm_replace }}"
    #clone
    source_vmid: "{{ pve_vm_source_vmid }}"
    #create
    agent: "{{ pve_vm_qemu_guest_agent }}"
    bios: "{{ pve_vm_bios }}"
    cpu: "{{ pve_vm_cpu }}"
    net: "{{ pve_vm_net }}"
    setup_iso: "{{ pve_vm_setup_iso }}"
    scsi: "{{ pve_vm_scsi }}"
    efivars_storage: "{{ pve_vm_efivars_storage | default(pve_vm_storage) | default('rbd') }}"
    storage: "{{ pve_vm_storage | default('rbd')  }}"
  register: __pve_vm_setup_result
  retries: 3
  delay: 10
  until: __pve_vm_setup_result is not failed

- name: Network
  delegate_to: "{{ pve_target_node }}"
  inett.pve.pve_vm_network:
    vmid: "{{ pve_vmid }}"
    net: "{{ pve_vm_net }}"
  when: (pve_vm_source_vmid | int >= 100) and  (pve_vm_state != 'absent')

- name: Configure nameserver
  delegate_to: "{{ pve_target_node }}"
  inett.pve.pve_vm_config:
    vmid: "{{ pve_vmid }}"
    update:
      nameserver: "{{ pve_vm_nameserver }}"
  when: (pve_vm_nameserver is defined) and (pve_vm_searchdomain is not defined)

- name: Configure nameserver and search domain
  delegate_to: "{{ pve_target_node }}"
  inett.pve.pve_vm_config:
    vmid: "{{ pve_vmid }}"
    update:
      nameserver: "{{ pve_vm_nameserver }}"
      searchdomain: "{{ pve_vm_searchdomain }}"
  when: (pve_vm_nameserver is defined) and (pve_vm_searchdomain is defined)

- name: Disks
  import_role:
    name: inett.pve.pve_vm_disks

- name: Update CPU
  delegate_to: "{{ pve_target_node }}"
  inett.pve.pve_vm_config:
    vmid: "{{ pve_vmid }}"
    update:
      cores: "{{ pve_vm_cores }}"
  when: pve_vm_cores is defined

- name: Update Memory
  delegate_to: "{{ pve_target_node }}"
  inett.pve.pve_vm_config:
    vmid: "{{ pve_vmid }}"
    update:
      memory: "{{ pve_vm_memory }}"
      balloon: "{{ pve_vm_memory }}"
  when: pve_vm_memory is defined

- name: Cloud-Init
  ansible.builtin.import_role:
    name: inett.pve.pve_vm_cloudinit

- name: Update configuration when VM is a clone
  block:
    - delegate_to: "{{ pve_target_node }}"
      inett.pve.pve_vm_config:
        vmid: "{{ pve_vmid }}"
        update:
          memory: "{{ pve_vm_memory }}"
          name: "{{ inventory_hostname }}"
          agent: "{{ pve_vm_qemu_guest_agent }}"
          bios: "{{ pve_vm_bios }}"
        # cpu: "{{ pve_vm_cpu }}"
    - debug:
        var: pve_vm_net
    - delegate_to: "{{ pve_target_node }}"
      inett.pve.pve_vm_network:
        vmid: "{{ pve_vmid }}"
        net: "{{ pve_vm_net }}"
    - delegate_to: "{{ pve_target_node }}"
      ansible.builtin.import_role:
        name: inett.pve.pve_vm_cloudinit
  when:
    - pve_vm_state != "absent"
    - pve_vm_source_vmid is defined
    - pve_vm_source_vmid | int >= 100


#- name: Cloud-Init
#   ansible.builtin.import_role:
#     name: inett.pve.pve_vm_cloudinit

- ansible.builtin.wait_for:
    timeout: 5
  delegate_to: localhost

- name: HA-Config
  delegate_to: "{{ pve_target_node }}"
  inett.pve.pve_vm_ha:
    vmid: "{{ pve_vmid }}"
    state: "{{ 'started' if pve_vm_state == 'running' else 'stopped' }}"
    group: "{{ pve_vm_ha['group'] | default(None) }}"
  when: pve_vm_ha is defined
  tags: ha

- name: start VMs
  delegate_to: "{{ pve_target_node }}"
  inett.pve.pve_vm:
    vmid: "{{ pve_vmid }}"
    state: "{{ pve_vm_state }}"
  when:
    - pve_vm_state == 'running'
    - pve_vm_ha is not defined
  tags: start
