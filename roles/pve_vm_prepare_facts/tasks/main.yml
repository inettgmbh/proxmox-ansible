---
- ansible.builtin.set_fact:
    pve_clusters: >
      {%- set cluster_names = [] -%}
      {%- for host in groups['all'] | default ([]) -%}
      {%-   if 'pve_cluster_name' in hostvars[host] -%}
      {%-     set cluster_name = hostvars[host].get('pve_cluster_name') -%}
      {%-     set cluster_names = cluster_names.append(cluster_name) -%}
      {%-   endif -%}
      {%- endfor -%}
      {{- cluster_names | unique -}}
  when: pve_target_node is not defined
- ansible.builtin.set_fact:
    pve_target_cluster: "{{ pve_clusters[0] }}"
  when: (pve_clusters | count) == 1 and (pve_target_node is not defined) and (pve_target_cluster is not defined)
- ansible.builtin.set_fact:
    pve_target_cluster: "{{ _pve_target_cluster }}"
  when: (_pve_target_cluster is defined) and (_pve_target_cluster is not skipped)
- ansible.builtin.set_fact:
    pve_target_group: "pve_cluster_{{pve_target_cluster}}"
  when: pve_target_node is not defined
- vars:
    pve_target_hosts: "{{groups[pve_target_group]}}"
    pve_target_hosts_size: "{{groups[pve_target_group] | count}}"
  ansible.builtin.set_fact:
    pve_target_node: "{{ pve_target_hosts[((pve_vmid | int) % (pve_target_hosts_size | int))] }}"
  when: pve_target_node is not defined
- name: fail when target node cannot be determined
  fail:
    msg: target node cannot be determined
  when: pve_target_node is not defined
- name: merge net0 mac address
  ansible.builtin.set_fact:
    pve_vm_net:
      '0':
        'macaddr': "{{ pve_vm_net0_mac }}"
  when: pve_vm_net0_mac is defined
- name: merge storage variables
  ansible.builtin.set_fact:
    "{{item}}": "{{hostvars[pve_target_node][item]}}"
  when: item not in hostvars[inventory_hostname]
  loop:
    - "pve_vm_storage"
    - "pve_vm_efivars_storage"
